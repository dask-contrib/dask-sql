name: Upload Python package
on:
  release:
    types: [created]
  pull_request: # for testing

# for testing
concurrency:
  group: release-${{ github.head_ref }}
  cancel-in-progress: true

 # Required shell entrypoint to have properly activated conda environments
defaults:
  run:
    shell: bash -l {0}

jobs:
  build:
    name: build py3.${{ matrix.python }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      CONDA_FILE: continuous_integration/environment-3.${{ matrix.python }}-dev.yaml
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python: ["8", "9", "10"] # 3.x
    steps:
      - uses: actions/checkout@v2
      # - name: Set up Python
      #   uses: conda-incubator/setup-miniconda@v2
      #   with:
      #     miniforge-variant: Mambaforge
      #     use-mamba: true
      #     python-version: 3.${{ matrix.python }}
      #     channel-priority: strict
      #     channels: conda-forge,nodefaults
      #     activate-environment: dask-sql
      #     environment-file: ${{ env.CONDA_FILE }}
      - name: Install dependencies
        run: |
          pip install setuptools setuptools-rust wheel twine
          which python
          pip list
      - name: Set up QEMU
        if: contains(matrix.os, 'ubuntu')
        uses: docker/setup-qemu-action@v1
      - name: Add arm64 target for macos
        if: contains(matrix.os, 'macos')
        run: rustup target add aarch64-apple-darwin
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.10.2
        env:
          CIBW_BUILD: 'cp3${{ matrix.python }}-*'
          CIBW_SKIP: '*musllinux*'
          CIBW_ARCHS_LINUX: 'aarch64 x86_64'
          CIBW_ARCHS_WINDOWS: 'AMD64'
          CIBW_ARCHS_MACOS: 'x86_64 arm64'
          CIBW_ENVIRONMENT: 'PATH="$HOME/.cargo/bin:$PATH"'
          CIBW_ENVIRONMENT_LINUX: 'CARGO_NET_GIT_FETCH_WITH_CLI="true"'
          CIBW_ENVIRONMENT_WINDOWS: 'PATH="$UserProfile\.cargo\bin;$PATH"'
          CIBW_BEFORE_BUILD: 'pip install -U setuptools-rust'
          CIBW_BEFORE_BUILD_LINUX: >
            pip install -U setuptools-rust &&
            curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=stable --profile=minimal -y &&
            rustup show
        with:
          package-dir: .
          output-dir: dist
          config-file: "dask_planner/pyproject.toml"
      - name: list dist files
        run: ls -lh dist/
      - name: Upload binary wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels for py3.${{ matrix.python }} on ${{ matrix.os }}
          path: dist/*
