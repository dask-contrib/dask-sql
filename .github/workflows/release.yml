name: Upload Python package
on:
  release:
    types: [created]
  pull_request:
    paths:
      - .github/workflows/release.yml

# When this workflow is queued, automatically cancel any previous running
# or pending jobs from the same branch
concurrency:
  group: release-${{ github.head_ref }}
  cancel-in-progress: true

env:
  upload: ${{ github.event_name == 'release' && github.repository == 'dask-contrib/dask-sql' }}

jobs:
  linux:
    name: Build and publish wheels for linux ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v3
      - name: Install protoc
        run: |
          sudo apt update && sudo apt install -y protobuf-compiler
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build wheels for x86_64
        if: matrix.target == 'x86_64'
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
          sccache: 'true'
          manylinux: auto
      - name: Build wheels for aarch64
        if: matrix.target == 'aarch64'
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --zig
          sccache: 'true'
          manylinux: auto
      - name: Check dist files
        run: |
          pip install twine

          twine check dist/*
          ls -lh dist/
      - name: Upload binary wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels for linux
          path: dist/*
      - name: Publish package
        if: env.upload == 'true'
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: twine upload dist/*

  windows:
    name: Build and publish wheels for windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: '3.x'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: x64
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: x64
          args: --release --out dist
          sccache: 'true'
      - name: Check dist files
        run: |
          pip install twine

          twine check dist/*
          ls dist/
      - name: Upload binary wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels for windows
          path: dist/*
      - name: Publish package
        if: env.upload == 'true'
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: twine upload dist/*

  macos:
    name: Build and publish wheels for macos ${{ matrix.target }}
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v3
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: '3.x'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
          sccache: 'true'
      - name: Check dist files
        run: |
          pip install twine

          twine check dist/*
          ls -lh dist/
      - name: Upload binary wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels for macos
          path: dist/*
      - name: Publish package
        if: env.upload == 'true'
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: twine upload dist/*

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Check dist files
        run: |
          pip install twine

          twine check dist/*
          ls -lh dist/
      - name: Publish source distribution
        if: env.upload == 'true'
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: twine upload dist/*
