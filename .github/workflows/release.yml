name: Upload Python package
on:
  release:
    types: [created]
  pull_request: # for testing

# for testing
concurrency:
  group: test-${{ github.head_ref }}
  cancel-in-progress: true

 # Required shell entrypoint to have properly activated conda environments
defaults:
  run:
    shell: bash -l {0}

jobs:
  build:
    name: build py${{ matrix.python }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      CONDA_FILE: continuous_integration/environment-${{ matrix.python }}-dev.yaml
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python: ["3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          use-mamba: true
          python-version: ${{ matrix.python }}
          channel-priority: strict
          channels: conda-forge,nodefaults
          activate-environment: dask-sql
          environment-file: ${{ env.CONDA_FILE }}
      - name: Install dependencies
        run: |
          pip install setuptools setuptools_rust wheel twine
          which python
          pip list
          conda list
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.10.2
        env:
          CIBW_BUILD: 'cp${{ matrix.python }}-*'
          CIBW_SKIP: '*musllinux*'
          CIBW_ARCHS: 'x86_64'
          CIBW_ENVIRONMENT: 'PATH="$HOME/.cargo/bin:$PATH"'
          CIBW_BEFORE_BUILD: 'pip install -U setuptools-rust'
          CIBW_BEFORE_BUILD_LINUX: >
            pip install -U setuptools-rust &&
            curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=nightly --profile=minimal -y &&
            rustup show
        with:
          package-dir: .
          output-dir: dir
          config-file: "dask_planner/pyproject.toml"
      - name: list dist files
        run: ls dist/
      - name: Upload binary wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels for py3.${{ matrix.python }} on ${{ matrix.os }}
          path: dist/*
